/* Based on https://github.com/jaredlll08/MultiLoader-Template/ */

plugins {
    id 'multiloader-loader'
    id 'fabric-loom'
}
dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_minecraft_version}:${parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    // Make Nullable's available
    compileOnly 'com.google.code.findbugs:jsr305:+'
}

loom {
    def aw = project(':loader-common').file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) {
        accessWidenerPath.set(aw)
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName('Loader-fabric: Client')
            ideConfigGenerated(true)
            runDir('runs/client')
        }
        server {
            server()
            setConfigName('Loader-fabric: Server')
            ideConfigGenerated(true)
            runDir('runs/server')
        }
    }
}

publishing {
    publications { PublicationContainer publicationContainer ->
        publicationContainer.getByName("maven") { MavenPublication publication ->
            publication.artifacts = [remapJar, javadocJar, deobfJar, remapSourcesJar]
            publication.artifactId = project.archivesBaseName.toLowerCase() // GH can't handle uppercase...
        }
    }
}
